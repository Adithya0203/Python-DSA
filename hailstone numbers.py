# We are provided with a number N. Our task is to generate all the Hailstone Numbers from N and find the number of steps taken by N to reduce to

'''Collatz Conjecture: 
    A problem posed by L. Collatz in 1937, also called the 3x+1 mapping, 3n+1 problem. 
    Let N be a integer. According to Collatz conjecture, if we keep iterating N as following 
        N = N / 2 // For Even N 
    and N = 3 * N + 1 // For Odd N 
Our number will eventually converge to 1 irrespective of the choice of N. '''

# Hailstone Numbers: The sequence of integers generated by Collatz conjecture are called Hailstone Numbers.

def HailstoneNumbers(N, c): 
    print(N, end = " "); 
    if (N == 1 and c == 0): 
        return c; 
    elif (N == 1 and c != 0): 
        c = c + 1; 
    elif (N % 2 == 0):
        c = c + 1; 
        c = HailstoneNumbers(int(N / 2), c); 
    elif (N % 2 != 0):
        c = c + 1; 
        c = HailstoneNumbers(3 * N + 1, c); 
    return c; 
   
N = 7; 
x = HailstoneNumbers(N, 0); 
print("\nNumber of Steps: ", x);